name: CI
"on":
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  lint-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Run Hadolint Dockerfile Linter
        uses: burdzwastaken/hadolint-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HADOLINT_ACTION_DOCKERFILE_FOLDER: docker

  lint-markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Run Remark Markdown Linter
        run: |
          npm install
          npm run lint:md
      - name: Run Textlint Markdown Linter
        run: npm run lint:text

  # lint-code:
  #   name: Lint JavaScript
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git checkout
  #       uses: actions/checkout@v2
  #     - name: Use Node.js 12.x
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12.x
  #     - name: Run EsLint Node.js Linter
  #       run: |
  #         npm install
  #         npm run lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 12.x
          - 14.x
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: "Install Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.node-version }}"
      - name: "Start Services"
        run: |
          ./tests/load_test_configuration.sh
          ./replace_local_ip.sh
          docker-compose -f ./tests/docker-compose.yml up -d
      - name: "Unit Tests with Node.js ${{ matrix.node-version }}"
        run: |
          npm install
          npm test
  code-coverage:
    name: Coveralls Code Coverage
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: "Test Coverage with Node.js 12.x"
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: "Start Services"
        run: |
          ./tests/load_test_configuration.sh
          ./replace_local_ip.sh
          docker-compose -f ./tests/docker-compose.yml up -d
      - name: "Unit Tests with Node.js 12.x"
        run: |
          npm install
          npm run coverage
      - name: Push to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
