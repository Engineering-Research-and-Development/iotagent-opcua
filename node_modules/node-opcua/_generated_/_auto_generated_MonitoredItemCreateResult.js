// --------- This code has been automatically generated !!! 2018-04-20T14:13:31.255Z
"use strict";
require("requirish")._(module);
/**
 * @module opcua.address_space.types
 */
var assert = require("better-assert");
var util = require("util");
var _  = require("underscore");
var makeNodeId = require("lib/datamodel/nodeid").makeNodeId;
var schema_helpers =  require("lib/misc/factories_schema_helpers");
var extract_all_fields                       = schema_helpers.extract_all_fields;
var resolve_schema_field_types               = schema_helpers.resolve_schema_field_types;
var initialize_field                         = schema_helpers.initialize_field;
var initialize_field_array                   = schema_helpers.initialize_field_array;
var check_options_correctness_against_schema = schema_helpers.check_options_correctness_against_schema;
var _defaultTypeMap = require("lib/misc/factories_builtin_types")._defaultTypeMap;
var ec = require("lib/misc/encode_decode");
var encodeArray = ec.encodeArray;
var decodeArray = ec.decodeArray;
var makeExpandedNodeId = ec.makeExpandedNodeId;
var generate_new_id = require("lib/misc/factories").generate_new_id;
var _enumerations = require("lib/misc/factories_enumerations")._private._enumerations;
var schema = require("../schemas/MonitoredItemCreateResult_schema").MonitoredItemCreateResult_Schema;
var BaseUAObject = require("lib/misc/factories_baseobject").BaseUAObject;

/**
 * 
 * @class MonitoredItemCreateResult
 * @constructor
 * @extends BaseUAObject
 * @param  options {Object}
 * @param  [options.statusCode] {StatusCode} 
 * @param  [options.monitoredItemId] {IntegerId} 
 * @param  [options.revisedSamplingInterval] {Duration} 
 * @param  [options.revisedQueueSize] {Counter} 
 * @param  [options.filterResult] {ExtensionObject} 
 */
function MonitoredItemCreateResult(options)
{
    options = options || {};
    /* istanbul ignore next */
    if (schema_helpers.doDebug) { check_options_correctness_against_schema(this,schema,options); }
    var self = this;
    assert(this instanceof BaseUAObject); //  ' keyword "new" is required for constructor call')
    resolve_schema_field_types(schema);

    BaseUAObject.call(this,options);

    /**
      * 
      * @property statusCode
      * @type {StatusCode}
      */
    self.statusCode = initialize_field(schema.fields[0], options.statusCode);

    /**
      * 
      * @property monitoredItemId
      * @type {IntegerId}
      */
    self.monitoredItemId = initialize_field(schema.fields[1], options.monitoredItemId);

    /**
      * 
      * @property revisedSamplingInterval
      * @type {Duration}
      */
    self.revisedSamplingInterval = initialize_field(schema.fields[2], options.revisedSamplingInterval);

    /**
      * 
      * @property revisedQueueSize
      * @type {Counter}
      */
    self.revisedQueueSize = initialize_field(schema.fields[3], options.revisedQueueSize);

    /**
      * 
      * @property filterResult
      * @type {ExtensionObject}
      */
    self.filterResult = initialize_field(schema.fields[4], options.filterResult);

   // Object.preventExtensions(self);
}
util.inherits(MonitoredItemCreateResult,BaseUAObject);
MonitoredItemCreateResult.prototype.encodingDefaultBinary = makeExpandedNodeId(748,0);
MonitoredItemCreateResult.prototype.encodingDefaultXml = makeExpandedNodeId(747,0);
MonitoredItemCreateResult.prototype._schema = schema;

var encode_StatusCode = _defaultTypeMap.StatusCode.encode;
var decode_StatusCode = _defaultTypeMap.StatusCode.decode;
var encode_IntegerId = _defaultTypeMap.IntegerId.encode;
var decode_IntegerId = _defaultTypeMap.IntegerId.decode;
var encode_Duration = _defaultTypeMap.Duration.encode;
var decode_Duration = _defaultTypeMap.Duration.decode;
var encode_Counter = _defaultTypeMap.Counter.encode;
var decode_Counter = _defaultTypeMap.Counter.decode;
var encode_ExtensionObject = _defaultTypeMap.ExtensionObject.encode;
var decode_ExtensionObject = _defaultTypeMap.ExtensionObject.decode;
/**
 * encode the object into a binary stream
 * @method encode
 *
 * @param stream {BinaryStream} 
 */
MonitoredItemCreateResult.prototype.encode = function(stream,options) {
    // call base class implementation first
    BaseUAObject.prototype.encode.call(this,stream,options);
    encode_StatusCode(this.statusCode,stream);
    encode_IntegerId(this.monitoredItemId,stream);
    encode_Duration(this.revisedSamplingInterval,stream);
    encode_Counter(this.revisedQueueSize,stream);
    encode_ExtensionObject(this.filterResult,stream);
};
/**
 * decode the object from a binary stream
 * @method decode
 *
 * @param stream {BinaryStream} 
 * @param [option] {object} 
 */
MonitoredItemCreateResult.prototype.decode = function(stream,options) {
    // call base class implementation first
    BaseUAObject.prototype.decode.call(this,stream,options);
    this.statusCode = decode_StatusCode(stream,options);
    this.monitoredItemId = decode_IntegerId(stream,options);
    this.revisedSamplingInterval = decode_Duration(stream,options);
    this.revisedQueueSize = decode_Counter(stream,options);
    this.filterResult = decode_ExtensionObject(stream,options);
};
MonitoredItemCreateResult.possibleFields = [
  "statusCode",
         "monitoredItemId",
         "revisedSamplingInterval",
         "revisedQueueSize",
         "filterResult"
];


exports.MonitoredItemCreateResult = MonitoredItemCreateResult;
var register_class_definition = require("lib/misc/factories_factories").register_class_definition;
register_class_definition("MonitoredItemCreateResult",MonitoredItemCreateResult);
