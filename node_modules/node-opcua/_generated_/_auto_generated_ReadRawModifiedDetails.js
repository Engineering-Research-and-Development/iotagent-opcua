// --------- This code has been automatically generated !!! 2018-02-01T15:08:09.132Z
"use strict";
require("requirish")._(module);
/**
 * @module opcua.address_space.types
 */
var assert = require("better-assert");
var util = require("util");
var _  = require("underscore");
var makeNodeId = require("lib/datamodel/nodeid").makeNodeId;
var schema_helpers =  require("lib/misc/factories_schema_helpers");
var extract_all_fields                       = schema_helpers.extract_all_fields;
var resolve_schema_field_types               = schema_helpers.resolve_schema_field_types;
var initialize_field                         = schema_helpers.initialize_field;
var initialize_field_array                   = schema_helpers.initialize_field_array;
var check_options_correctness_against_schema = schema_helpers.check_options_correctness_against_schema;
var _defaultTypeMap = require("lib/misc/factories_builtin_types")._defaultTypeMap;
var ec = require("lib/misc/encode_decode");
var encodeArray = ec.encodeArray;
var decodeArray = ec.decodeArray;
var makeExpandedNodeId = ec.makeExpandedNodeId;
var generate_new_id = require("lib/misc/factories").generate_new_id;
var _enumerations = require("lib/misc/factories_enumerations")._private._enumerations;
var schema = require("../schemas/ReadRawModifiedDetails_schema").ReadRawModifiedDetails_Schema;
var BaseUAObject = require("lib/misc/factories_baseobject").BaseUAObject;
var HistoryReadDetails = require("./_auto_generated_HistoryReadDetails").HistoryReadDetails;

/**
 * 
 * @class ReadRawModifiedDetails
 * @constructor
 * @extends HistoryReadDetails
 * @param  options {Object}
 * @param  [options.isReadModified] {Boolean} 
 * @param  [options.startTime] {DateTime} 
 * @param  [options.endTime] {DateTime} 
 * @param  [options.numValuesPerNode] {UInt32} 
 * @param  [options.returnBounds] {Boolean} 
 */
function ReadRawModifiedDetails(options)
{
    options = options || {};
    /* istanbul ignore next */
    if (schema_helpers.doDebug) { check_options_correctness_against_schema(this,schema,options); }
    var self = this;
    assert(this instanceof BaseUAObject); //  ' keyword "new" is required for constructor call')
    resolve_schema_field_types(schema);

    HistoryReadDetails.call(this,options);

    /**
      * 
      * @property isReadModified
      * @type {Boolean}
      */
    self.isReadModified = initialize_field(schema.fields[0], options.isReadModified);

    /**
      * 
      * @property startTime
      * @type {DateTime}
      */
    self.startTime = initialize_field(schema.fields[1], options.startTime);

    /**
      * 
      * @property endTime
      * @type {DateTime}
      */
    self.endTime = initialize_field(schema.fields[2], options.endTime);

    /**
      * 
      * @property numValuesPerNode
      * @type {UInt32}
      */
    self.numValuesPerNode = initialize_field(schema.fields[3], options.numValuesPerNode);

    /**
      * 
      * @property returnBounds
      * @type {Boolean}
      */
    self.returnBounds = initialize_field(schema.fields[4], options.returnBounds);

   // Object.preventExtensions(self);
}
util.inherits(ReadRawModifiedDetails,HistoryReadDetails);
ReadRawModifiedDetails.prototype.encodingDefaultBinary = makeExpandedNodeId(649,0);
ReadRawModifiedDetails.prototype.encodingDefaultXml = makeExpandedNodeId(648,0);
ReadRawModifiedDetails.prototype._schema = schema;

var encode_Boolean = _defaultTypeMap.Boolean.encode;
var decode_Boolean = _defaultTypeMap.Boolean.decode;
var encode_DateTime = _defaultTypeMap.DateTime.encode;
var decode_DateTime = _defaultTypeMap.DateTime.decode;
var encode_UInt32 = _defaultTypeMap.UInt32.encode;
var decode_UInt32 = _defaultTypeMap.UInt32.decode;
/**
 * encode the object into a binary stream
 * @method encode
 *
 * @param stream {BinaryStream} 
 */
ReadRawModifiedDetails.prototype.encode = function(stream,options) {
    // call base class implementation first
    HistoryReadDetails.prototype.encode.call(this,stream,options);
    encode_Boolean(this.isReadModified,stream);
    encode_DateTime(this.startTime,stream);
    encode_DateTime(this.endTime,stream);
    encode_UInt32(this.numValuesPerNode,stream);
    encode_Boolean(this.returnBounds,stream);
};
ReadRawModifiedDetails.prototype.decode = function(stream,options) {
    // call base class implementation first
    HistoryReadDetails.prototype.decode.call(this,stream,options);
    this.isReadModified = decode_Boolean(stream,options);
    this.startTime = decode_DateTime(stream,options);
    this.endTime = decode_DateTime(stream,options);
    this.numValuesPerNode = decode_UInt32(stream,options);
    this.returnBounds = decode_Boolean(stream,options);
};
ReadRawModifiedDetails.possibleFields = (function() {
    return [
        "isReadModified",
         "startTime",
         "endTime",
         "numValuesPerNode",
         "returnBounds"
    ];
})();


exports.ReadRawModifiedDetails = ReadRawModifiedDetails;
var register_class_definition = require("lib/misc/factories_factories").register_class_definition;
register_class_definition("ReadRawModifiedDetails",ReadRawModifiedDetails);
