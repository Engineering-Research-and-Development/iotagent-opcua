// --------- This code has been automatically generated !!! 2018-02-01T15:08:08.718Z
"use strict";
require("requirish")._(module);
/**
 * @module opcua.address_space.types
 */
var assert = require("better-assert");
var util = require("util");
var _  = require("underscore");
var makeNodeId = require("lib/datamodel/nodeid").makeNodeId;
var schema_helpers =  require("lib/misc/factories_schema_helpers");
var extract_all_fields                       = schema_helpers.extract_all_fields;
var resolve_schema_field_types               = schema_helpers.resolve_schema_field_types;
var initialize_field                         = schema_helpers.initialize_field;
var initialize_field_array                   = schema_helpers.initialize_field_array;
var check_options_correctness_against_schema = schema_helpers.check_options_correctness_against_schema;
var _defaultTypeMap = require("lib/misc/factories_builtin_types")._defaultTypeMap;
var ec = require("lib/misc/encode_decode");
var encodeArray = ec.encodeArray;
var decodeArray = ec.decodeArray;
var makeExpandedNodeId = ec.makeExpandedNodeId;
var generate_new_id = require("lib/misc/factories").generate_new_id;
var _enumerations = require("lib/misc/factories_enumerations")._private._enumerations;
var schema = require("../schemas/ApplicationDescription_schema").ApplicationDescription_Schema;
var LocalizedText = require("./_auto_generated_LocalizedText").LocalizedText;
var BaseUAObject = require("lib/misc/factories_baseobject").BaseUAObject;

//## Define special behavior for Enumeration
var _enum_properties = {
    "applicationType": {
        hidden: false,
        enumerable: true,
        configurable: false,
            get: function() {
                return this.$applicationType;
            },
            set: function(value) {
                var coercedValue = _enumerations.ApplicationType.typedEnum.get(value);
                /* istanbul ignore next */
                if ( coercedValue === undefined || coercedValue === null) {
                      throw new Error("value cannot be coerced to ApplicationType: " + value);
                }
                this.$applicationType = coercedValue;
            }
    },
    "$applicationType": {
         configurable: false,
         value: 'aaaa',
         hidden: true,
         writable: true,
         enumerable: false
    },
};


/**
 * 
 * @class ApplicationDescription
 * @constructor
 * @extends BaseUAObject
 * @param  options {Object}
 * @param  [options.applicationUri] {String} 
 * @param  [options.productUri] {String} 
 * @param  [options.applicationName] {LocalizedText} 
 * @param  [options.applicationType] {ApplicationType} 
 * @param  [options.gatewayServerUri] {String} 
 * @param  [options.discoveryProfileUri] {String} 
 * @param  [options.discoveryUrls] {String[]} 
 */
function ApplicationDescription(options)
{
    options = options || {};
    /* istanbul ignore next */
    if (schema_helpers.doDebug) { check_options_correctness_against_schema(this,schema,options); }
    var self = this;
    assert(this instanceof BaseUAObject); //  ' keyword "new" is required for constructor call')
    resolve_schema_field_types(schema);

    BaseUAObject.call(this,options);

    /**
      * 
      * @property applicationUri
      * @type {String}
      */
    self.applicationUri = initialize_field(schema.fields[0], options.applicationUri);

    /**
      * 
      * @property productUri
      * @type {String}
      */
    self.productUri = initialize_field(schema.fields[1], options.productUri);

    /**
      * 
      * @property applicationName
      * @type {LocalizedText}
      */
    self.applicationName =  new LocalizedText( options.applicationName);

    /**
      * 
      * @property applicationType
      * @type {ApplicationType}
      */
    self.applicationType = initialize_field(schema.fields[3], options.applicationType);

    /**
      * 
      * @property gatewayServerUri
      * @type {String}
      */
    self.gatewayServerUri = initialize_field(schema.fields[4], options.gatewayServerUri);

    /**
      * 
      * @property discoveryProfileUri
      * @type {String}
      */
    self.discoveryProfileUri = initialize_field(schema.fields[5], options.discoveryProfileUri);

    /**
      * 
      * @property discoveryUrls
      * @type {String[]}
      */
    self.discoveryUrls = initialize_field_array(schema.fields[6], options.discoveryUrls);

   // Object.preventExtensions(self);
}
util.inherits(ApplicationDescription,BaseUAObject);

//define enumeration properties
Object.defineProperties(ApplicationDescription.prototype,_enum_properties);
ApplicationDescription.prototype.encodingDefaultBinary = makeExpandedNodeId(310,0);
ApplicationDescription.prototype.encodingDefaultXml = makeExpandedNodeId(309,0);
ApplicationDescription.prototype._schema = schema;

var encode_String = _defaultTypeMap.String.encode;
var decode_String = _defaultTypeMap.String.decode;
var encode_ApplicationType = _enumerations.ApplicationType.encode;
var decode_ApplicationType = _enumerations.ApplicationType.decode;
/**
 * encode the object into a binary stream
 * @method encode
 *
 * @param stream {BinaryStream} 
 */
ApplicationDescription.prototype.encode = function(stream,options) {
    // call base class implementation first
    BaseUAObject.prototype.encode.call(this,stream,options);
    encode_String(this.applicationUri,stream);
    encode_String(this.productUri,stream);
   this.applicationName.encode(stream,options);
    encode_ApplicationType(this.applicationType,stream);
    encode_String(this.gatewayServerUri,stream);
    encode_String(this.discoveryProfileUri,stream);
    encodeArray(this.discoveryUrls, stream, encode_String);
};
ApplicationDescription.prototype.decode = function(stream,options) {
    // call base class implementation first
    BaseUAObject.prototype.decode.call(this,stream,options);
    this.applicationUri = decode_String(stream,options);
    this.productUri = decode_String(stream,options);
    this.applicationName.decode(stream,options);
    this.applicationType = decode_ApplicationType(stream,options);
    this.gatewayServerUri = decode_String(stream,options);
    this.discoveryProfileUri = decode_String(stream,options);
    this.discoveryUrls = decodeArray(stream, decode_String);
};
ApplicationDescription.possibleFields = (function() {
    return [
        "applicationUri",
         "productUri",
         "applicationName",
         "applicationType",
         "gatewayServerUri",
         "discoveryProfileUri",
         "discoveryUrls"
    ];
})();


exports.ApplicationDescription = ApplicationDescription;
var register_class_definition = require("lib/misc/factories_factories").register_class_definition;
register_class_definition("ApplicationDescription",ApplicationDescription);
